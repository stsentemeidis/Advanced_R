zoom = 10,
filename="data/TacomaMap_temp")
ggmap(TacomaMap) +
labs(x = '', y = '') +
theme(legend.position = 'none') +
scale_color_hue() +
scale_fill_hue() +
geom_point(data = df_train, aes(x = long, y = lat), size = 0.5, color = 'blue')
TacomaMap <- get_map(location = c(lon = -122.2, lat = 47.57),
maptype = "toner-lite", source = 'google',
zoom = 11,
filename="data/TacomaMap_temp")
ggmap(TacomaMap) +
labs(x = '', y = '') +
theme(legend.position = 'none') +
scale_color_hue() +
scale_fill_hue() +
geom_point(data = df_train, aes(x = long, y = lat), size = 0.5, color = 'blue')
TacomaMap <- get_map(location = c(lon = -122.2, lat = 47.57),
maptype = "toner-lite", source = 'google',
zoom = 8,
filename="data/TacomaMap_temp")
ggmap(TacomaMap) +
labs(x = '', y = '') +
theme(legend.position = 'none') +
scale_color_hue() +
scale_fill_hue() +
geom_point(data = df_train, aes(x = long, y = lat), size = 0.5, color = 'blue')
TacomaMap <- get_map(location = c(lon = -122.2, lat = 47.57),
maptype = "toner-lite", source = 'google',
zoom = 9,
filename="data/TacomaMap_temp")
ggmap(TacomaMap) +
labs(x = '', y = '') +
theme(legend.position = 'none') +
scale_color_hue() +
scale_fill_hue() +
geom_point(data = df_train, aes(x = long, y = lat), size = 0.5, color = 'blue')
TacomaMap <- get_map(location = c(lon = -122.2, lat = 47.57),
maptype = "watercolor", source = 'google',
zoom = 9,
filename="data/TacomaMap_temp")
ggmap(TacomaMap) +
labs(x = '', y = '') +
theme(legend.position = 'none') +
scale_color_hue() +
scale_fill_hue() +
geom_point(data = df_train, aes(x = long, y = lat), size = 0.5, color = 'blue')
TacomaMap <- get_map(location = c(lon = -122.2, lat = 47.57),
maptype = "toner-2011", source = 'google',
zoom = 9,
filename="data/TacomaMap_temp")
ggmap(TacomaMap) +
labs(x = '', y = '') +
theme(legend.position = 'none') +
scale_color_hue() +
scale_fill_hue() +
geom_point(data = df_train, aes(x = long, y = lat), size = 0.5, color = 'blue')
TacomaMap <- get_map(location = c(lon = -122.2, lat = 47.57),
maptype = "toner-lines", source = 'google',
zoom = 9,
filename="data/TacomaMap_temp")
ggmap(TacomaMap) +
labs(x = '', y = '') +
theme(legend.position = 'none') +
scale_color_hue() +
scale_fill_hue() +
geom_point(data = df_train, aes(x = long, y = lat), size = 0.5, color = 'blue')
TacomaMap <- get_map(location = c(lon = -122.2, lat = 47.57),
maptype = "toner-hybrid", source = 'google',
zoom = 9,
filename="data/TacomaMap_temp")
ggmap(TacomaMap) +
labs(x = '', y = '') +
theme(legend.position = 'none') +
scale_color_hue() +
scale_fill_hue() +
geom_point(data = df_train, aes(x = long, y = lat), size = 0.5, color = 'blue')
TacomaMap <- get_map(location = c(lon = -122.2, lat = 47.57),
maptype = "toner-hybrid", source = 'google',
zoom = 10,
filename="data/TacomaMap_temp")
ggmap(TacomaMap) +
labs(x = '', y = '') +
theme(legend.position = 'none') +
scale_color_hue() +
scale_fill_hue() +
geom_point(data = df_train, aes(x = long, y = lat), size = 0.5, color = 'blue')
TacomaMap <- get_map(location = c(lon = -122.2, lat = 47.6),
maptype = "toner-hybrid", source = 'google',
zoom = 10,
filename="data/TacomaMap_temp")
ggmap(TacomaMap) +
labs(x = '', y = '') +
theme(legend.position = 'none') +
scale_color_hue() +
scale_fill_hue() +
geom_point(data = df_train, aes(x = long, y = lat), size = 0.5, color = 'blue')
TacomaMap <- get_map(location = c(lon = -122.2, lat = 47.7),
maptype = "toner-hybrid", source = 'google',
zoom = 10,
filename="data/TacomaMap_temp")
ggmap(TacomaMap) +
labs(x = '', y = '') +
theme(legend.position = 'none') +
scale_color_hue() +
scale_fill_hue() +
geom_point(data = df_train, aes(x = long, y = lat), size = 0.5, color = 'blue')
TacomaMap <- get_map(location = c(lon = -122.2, lat = 47.5),
maptype = "toner-hybrid", source = 'google',
zoom = 10,
filename="data/TacomaMap_temp")
ggmap(TacomaMap) +
labs(x = '', y = '') +
theme(legend.position = 'none') +
scale_color_hue() +
scale_fill_hue() +
geom_point(data = df_train, aes(x = long, y = lat), size = 0.5, color = 'blue')
TacomaMap <- get_map(location = c(lon = -122.2, lat = 47.45),
maptype = "toner-hybrid", source = 'google',
zoom = 10,
filename="data/TacomaMap_temp")
ggmap(TacomaMap) +
labs(x = '', y = '') +
theme(legend.position = 'none') +
scale_color_hue() +
scale_fill_hue() +
geom_point(data = df_train, aes(x = long, y = lat), size = 0.5, color = 'blue')
TacomaMap <- get_map(location = c(lon = -122.3, lat = 47.5),
maptype = "toner-hybrid", source = 'google',
zoom = 10,
filename="data/TacomaMap_temp")
ggmap(TacomaMap) +
labs(x = '', y = '') +
theme(legend.position = 'none') +
scale_color_hue() +
scale_fill_hue() +
geom_point(data = df_train, aes(x = long, y = lat), size = 0.5, color = 'blue')
TacomaMap <- get_map(location = c(lon = -122.4, lat = 47.5),
maptype = "toner-hybrid", source = 'google',
zoom = 10,
filename="data/TacomaMap_temp")
ggmap(TacomaMap) +
labs(x = '', y = '') +
theme(legend.position = 'none') +
scale_color_hue() +
scale_fill_hue() +
geom_point(data = df_train, aes(x = long, y = lat), size = 0.5, color = 'blue')
TacomaMap <- get_map(location = c(lon = -122.6, lat = 47.5),
maptype = "toner-hybrid", source = 'google',
zoom = 10,
filename="data/TacomaMap_temp")
ggmap(TacomaMap) +
labs(x = '', y = '') +
theme(legend.position = 'none') +
scale_color_hue() +
scale_fill_hue() +
geom_point(data = df_train, aes(x = long, y = lat), size = 0.5, color = 'blue')
TacomaMap <- get_map(location = c(lon = -122.2, lat = 47.5),
maptype = "toner-hybrid", source = 'google',
zoom = 10,
filename="data/TacomaMap_temp")
ggmap(TacomaMap) +
labs(x = '', y = '') +
theme(legend.position = 'none') +
scale_color_hue() +
scale_fill_hue() +
geom_point(data = df_train, aes(x = long, y = lat), size = 0.5, color = 'blue')
TacomaMap <- get_map(location = c(lon = -122.22, lat = 47.5),
maptype = "toner-hybrid", source = 'google',
zoom = 10,
filename="data/TacomaMap_temp")
ggmap(TacomaMap) +
labs(x = '', y = '') +
theme(legend.position = 'none') +
scale_color_hue() +
scale_fill_hue() +
geom_point(data = df_train, aes(x = long, y = lat), size = 0.5, color = 'blue')
TacomaMap <- get_map(location = c(lon = -122.15, lat = 47.5),
maptype = "toner-hybrid", source = 'google',
zoom = 10,
filename="data/TacomaMap_temp")
ggmap(TacomaMap) +
labs(x = '', y = '') +
theme(legend.position = 'none') +
scale_color_hue() +
scale_fill_hue() +
geom_point(data = df_train, aes(x = long, y = lat), size = 0.5, color = 'blue')
TacomaMap <- get_map(location = c(lon = -122.12, lat = 47.5),
maptype = "toner-hybrid", source = 'google',
zoom = 10,
filename="data/TacomaMap_temp")
ggmap(TacomaMap) +
labs(x = '', y = '') +
theme(legend.position = 'none') +
scale_color_hue() +
scale_fill_hue() +
geom_point(data = df_train, aes(x = long, y = lat), size = 0.5, color = 'blue')
TacomaMap <- get_map(location = c(lon = -122.1, lat = 47.5),
maptype = "toner-hybrid", source = 'google',
zoom = 10,
filename="data/TacomaMap_temp")
ggmap(TacomaMap) +
labs(x = '', y = '') +
theme(legend.position = 'none') +
scale_color_hue() +
scale_fill_hue() +
geom_point(data = df_train, aes(x = long, y = lat), size = 0.5, color = 'blue')
TacomaMap <- get_map(location = c(lon = -122.1, lat = 47.46),
maptype = "toner-hybrid", source = 'google',
zoom = 10,
filename="data/TacomaMap_temp")
ggmap(TacomaMap) +
labs(x = '', y = '') +
theme(legend.position = 'none') +
scale_color_hue() +
scale_fill_hue() +
geom_point(data = df_train, aes(x = long, y = lat), size = 0.5, color = 'blue')
TacomaMap <- get_map(location = c(lon = -122.1, lat = 47.48),
maptype = "toner-hybrid", source = 'google',
zoom = 10,
filename="data/TacomaMap_temp")
ggmap(TacomaMap) +
labs(x = '', y = '') +
theme(legend.position = 'none') +
scale_color_hue() +
scale_fill_hue() +
geom_point(data = df_train, aes(x = long, y = lat), size = 0.5, color = 'blue')
TacomaMap <- get_map(location = c(lon = -122.1, lat = 47.49),
maptype = "toner-hybrid", source = 'google',
zoom = 10,
filename="data/TacomaMap_temp")
ggmap(TacomaMap) +
labs(x = '', y = '') +
theme(legend.position = 'none') +
scale_color_hue() +
scale_fill_hue() +
geom_point(data = df_train, aes(x = long, y = lat), size = 0.5, color = 'blue')
TacomaMap <- get_map(location = c(lon = -122.1, lat = 47.49),
maptype = "toner-hybrid", source = 'osm',
zoom = 10,
filename="data/TacomaMap_temp")
TacomaMap <- get_map(location = c(lon = -122.1, lat = 47.49),
maptype = "terrain", source = 'google',
zoom = 10,
filename="data/TacomaMap_temp")
ggmap(TacomaMap) +
labs(x = '', y = '') +
theme(legend.position = 'none') +
scale_color_hue() +
scale_fill_hue() +
geom_point(data = df_train, aes(x = long, y = lat), size = 0.5, color = 'blue')
TacomaMap <- get_map(location = c(lon = -122.1, lat = 47.49), source = 'google',
zoom = 10,
filename="data/TacomaMap_temp")
ggmap(TacomaMap) +
labs(x = '', y = '') +
theme(legend.position = 'none') +
scale_color_hue() +
scale_fill_hue() +
geom_point(data = df_train, aes(x = long, y = lat), size = 0.5, color = 'blue')
TacomaMap <- get_map(location = c(lon = -122.1, lat = 47.49),
maptype = "toner-hybrid", source = 'google',
zoom = 10,
filename="data/TacomaMap_temp")
ggmap(TacomaMap) +
labs(x = '', y = '') +
theme(legend.position = 'none') +
scale_color_hue() +
scale_fill_hue() +
geom_point(data = df_train, aes(x = long, y = lat), size = 0.5, color = 'blue')
TacomaMap <- get_map(location = c(lon = -122.1, lat = 47.49),
maptype = "toner-lite", source = 'google',
zoom = 10,
filename="data/TacomaMap_temp")
ggmap(TacomaMap) +
labs(x = '', y = '') +
theme(legend.position = 'none') +
scale_color_hue() +
scale_fill_hue() +
geom_point(data = df_train, aes(x = long, y = lat), size = 0.5, color = 'blue')
TacomaMap <- get_map(location = c(lon = -122.1, lat = 47.49),
maptype = "watercolor", source = 'google',
zoom = 10,
filename="data/TacomaMap_temp")
ggmap(TacomaMap) +
labs(x = '', y = '') +
theme(legend.position = 'none') +
scale_color_hue() +
scale_fill_hue() +
geom_point(data = df_train, aes(x = long, y = lat), size = 0.5, color = 'blue')
save(TacomaMap, file = 'data/TacomaMap.rda')
save(TacomaMap, file = 'TacomaMap.rda')
# Extracting date and month.
df_train$month <- format(as.Date(df_train$date), "%m")
# Clustering coordinates with radius
clustering_coords <- clusters_coord(df_train, 1, df_train$lat, df_train$long)
source('fct_clusters_coord.R')
# Clustering coordinates with radius
clustering_coords <- clusters_coord(df_train, 1, df_train$lat, df_train$long)
packages_list <- c('readxl',
'arm',
'rpart.plot',
'rpart',
'MLmetrics',
'ROCR',
'tidyr',
'ggplot2',
'corrplot',
'InformationValue',
'GGally',
'gridExtra',
'tree',
'leaflet',
'jtools',
'lattice',
'car',
'caret',
'MASS',
'ggthemes',
'RColorBrewer',
'reshape',
'tidyverse',
'glmnet',
'dummies',
'fastDummies',
'e1071',
'dplyr',
'anchors',
'mlbench',
'boot',
'gridExtra',
'datasets',
'scales',
'ggplot2',
'fpc',
'gbm',
'data.table',
'grid',
'proj4',
'mapproj',
'ggmap',
'ggplot2',
'maps',
'geosphere',
'leaderCluster'
)
for (i in packages_list){
if(!i%in%installed.packages()){
install.packages(i, dependencies = TRUE)
library(i, character.only = TRUE)
print(paste0(i, ' has been installed'))
} else {
print(paste0(i, ' is already installed'))
library(i, character.only = TRUE)
}
}
# Clustering coordinates with radius
clustering_coords <- clusters_coord(df_train, 1, df_train$lat, df_train$long)
# Clustering coordinates with radius
clustering_coords <- clusters_coord(df_train, 1, lat, long)
# Clustering coordinates with radius
clustering_coords <- clusters_coord(df_train, 1, 'lat', 'long')
# Clustering coordinates with radius
clustering_coords <- clusters_coord(as.data.table(df_train), 1, 'lat', 'long')
# Clustering coordinates with radius
clustering_coords <- clusters_coord(df_train, 1, 'lat', 'long')
# Clustering coordinates with radius
clustering_coords <- clusters_coord(df_train, 2, 'lat', 'long')
# Clustering coordinates with radius
clustering_coords <- clusters_coord(df_train, 0.5, 'lat', 'long')
### THIS SCRIPT CREATES THE FUNCTION ADD_DISTANCE_EDGES
#### FUNCTION CLUSTERS_COORD ####
clusters_coord <- function(df, r, lat, lon){
sub_df <- df[,c(lat, lon)]
df <- as.data.table(df)
out <- leaderCluster(points = as.data.table(sub_df), radius = r, distance="haversine")
clusters_centroids <- as.data.frame(out$cluster_centroids)
clusters_centroids$cluster_id <- as.numeric(rownames(clusters_centroids))
# cols = rainbow(length(unique(out)))[out]
# plot(df, pch=19, cex=0.7, col=cols, axes=FALSE)
# points(df[!duplicated(out),drop=FALSE], cex=2, col=unique(cols))
# box()
df <- cbind(df, out$cluster_id)
df <- merge(df, clusters_centroids, by.x = 'V2', by.y = 'cluster_id', all.x = TRUE)
# names(df) <- c('cluster_id', 'lat', 'lon', 'cluster_lat', 'cluster_lon')
names(clusters_centroids) <- c('cluster_lat', 'cluster_lon', 'cluster_id')
# clusters_centroids <- unique(as.data.frame(df[,c('cluster_lat', 'cluster_lon')]))
list_results <- list(df, clusters_centroids, out)
return(list_results)
}
# Clustering coordinates with radius
clustering_coords <- clusters_coord(df_train, 0.5, 'lat', 'long')
View(clustering_coords)
# Clustering coordinates with radius
clustering_coords <- clusters_coord(df_train, 1, 'lat', 'long')
View(clustering_coords)
# Clustering coordinates with radius
clustering_coords <- clusters_coord(df_train, 5, 'lat', 'long')
View(clustering_coords)
# Clustering coordinates with radius
clustering_coords <- clusters_coord(df_train, 100, 'lat', 'long')
View(clustering_coords)
View(df_train)
clustering_coords<-NA
# Clustering coordinates with radius
clustering_coords <- clusters_coord(df_train, 1, 'lat', 'long')
View(clustering_coords)
View(clustering_coords)
# Clustering coordinates with radius
clustering_coords <- clusters_coord(df_train[,c('id', 'lat', 'long')], 1, 'lat', 'long')
View(clustering_coords)
### THIS SCRIPT CREATES THE FUNCTION ADD_DISTANCE_EDGES
#### FUNCTION CLUSTERS_COORD ####
clusters_coord <- function(df, r, lat, lon){
sub_df <- df[,c(lat, lon)]
df <- as.data.table(df)
out <- leaderCluster(points = as.data.table(sub_df), radius = r, distance="haversine")
clusters_centroids <- as.data.frame(out$cluster_centroids)
clusters_centroids$cluster_id <- as.numeric(rownames(clusters_centroids))
# cols = rainbow(length(unique(out)))[out]
# plot(df, pch=19, cex=0.7, col=cols, axes=FALSE)
# points(df[!duplicated(out),drop=FALSE], cex=2, col=unique(cols))
# box()
df <- cbind(df, out$cluster_id)
df <- merge(df, clusters_centroids, by.x = 'V2', by.y = 'cluster_id', all.x = TRUE)
names(df) <- c('cluster_id', 'id','lat', 'lon', 'cluster_lat', 'cluster_lon')
names(clusters_centroids) <- c('cluster_lat', 'cluster_lon', 'cluster_id')
# clusters_centroids <- unique(as.data.frame(df[,c('cluster_lat', 'cluster_lon')]))
list_results <- list(df, clusters_centroids, out)
return(list_results)
}
# Clustering coordinates with radius
clustering_coords <- clusters_coord(df_train[,c('id', 'lat', 'long')], 1, 'lat', 'long')
View(clustering_coords)
# Clustering coordinates with radius
clustering_coords <- clusters_coord(df_train[,c('id', 'lat', 'long')], 5, 'lat', 'long')
clustering_coords <- NA
# Clustering coordinates with radius
clustering_coords <- clusters_coord(df_train[,c('id', 'lat', 'long')], 5, 'lat', 'long')
View(clustering_coords)
clustering_coords <- NA
# Clustering coordinates with radius
clustering_coords <- clusters_coord(df_train[,c('id', 'lat', 'long')], 5, 'lat', 'long')
View(clustering_coords)
clustering_coords <- NA
source('fct_haversine_dist.R')
# Distances from hot spots (airport, attractions)
df_train$distance_from_airport <- haversine_dist(df_train, 'long', 'lat', -122.301659, 47.443546)
### THIS SCRIPT CREATES THE FUNCTION HAVERSINE_DIST
#### FUNCTION HAVERSINE_DIST ####
haversine_dist <- function(df, lon1, lat1, lon2, lat2, df2 = NULL) {
if (is.null(df2)){
distHaversine(df[,c(lon1, lat1)], c(lon2, lat2))/1000
}
else{
distHaversine(df[,c(lon1, lat1)], c(lon2, lat2))/1000
}
}
# Distances from hot spots (airport, attractions)
df_train$distance_from_airport <- haversine_dist(df_train, 'long', 'lat', -122.301659, 47.443546)
View(df_train)
df_train$distance_from_zoo_acquarium <- haversine_dist(df_train, 'long', 'lat', -122.434110, 47.245885)
df_train$distance_from_museum_of_glass <- haversine_dist(df_train, 'long', 'lat', -122.43366, 47.24556)
View(df_train)
install.packages('gmapsdistance')
library(gmapsdistance)
library(gmapsdistance)
df_train$drive_dist_from_airport = gmapsdistance(origin = "47.443546+-122.301659",
destination = "47.245885+-122.434110",
mode = "driving")
library(XML)
library(bitops)
library(RCurl)
latlon2ft <- function(origin,destination){
xml.url <- paste0('http://maps.googleapis.com/maps/api/distancematrix/xml?origins=',origin,'&destinations=',destination,'&mode=driving&sensor=false')
xmlfile <- xmlParse(getURL(xml.url))
dist <- xmlValue(xmlChildren(xpathApply(xmlfile,"//distance")[[1]])$value)
distance <- as.numeric(sub(" km","",dist))
ft <- distance*3.28084 # FROM METER TO FEET
return(ft)
}
latlon2ft(origin='47.443546,-122.301659',destination='47.245885,-122.434110')
library(RCurl)
latlon2ft <- function(origin,destination){
xml.url <- paste0('http://maps.googleapis.com/maps/api/distancematrix/xml?origins=',origin,'&destinations=',destination,'&mode=driving&sensor=false')
xmlfile <- xmlParse(getURL(xml.url))
dist <- xmlValue(xmlChildren(xpathApply(xmlfile,"//distance")[[1]])$value)
distance <- as.numeric(sub(" km","",dist))
ft <- distance/1000 # FROM METER TO FEET
return(ft)
}
latlon2ft(origin='47.443546,-122.301659',destination='47.245885,-122.434110')
latlon2ft(origin=47.443546,-122.301659,destination=47.245885,-122.434110)
latlon2ft(origin="47.443546,-122.301659",destination="47.245885,-122.434110")
df_train$origin = paste0(df_train$lat,",",df_train$long)
latlon2ft(origin=df_train$origin,destination="47.245885,-122.434110")
df_train$drive_dist_airport <- latlon2ft(origin=df_train$origin,destination="47.245885,-122.434110")
df_train$drive_dist_airport <- latlon2ft(origin=df_train[1,'origin'],destination="47.245885,-122.434110")
library(googleway)
install.packages('googleway')
## distances for individual locations
google_distance(origins = list(c(df_train[1, "lat"], df_train[1,"long"])),
destinations = list(c(47.245885, -122.434110)),
key = key)
library(googleway)
key <- "AIzaSyCzcUX4czylxflM0J58r69BbLp6RgrnuhI"
## distances for individual locations
google_distance(origins = list(c(df_train[1, "lat"], df_train[1,"long"])),
destinations = list(c(47.245885, -122.434110)),
key = key)
latlon2ft(origin="47.3719,-122.215",destination="47.245885,-122.434110")
